df <- read.table("https://matematicas.uam.es/~joser.berrendero/datos/Datos-geyser.txt",
header=FALSE, skip=1, sep=' ', col.names=c(' ', 'D', 'Y', 'X'),
colClasses=c('numeric', 'numeric', 'numeric', 'numeric'))
# guardado en dataframe
df <- df[,c('D', 'Y', 'X')]
# ajuste localmente lineal
ajuste <- with(df, locpoly(X, Y, degree=1, bandwidth=dpill(X, Y), gridsize=107))
ajuste
# plot de ambas
df %>%
mutate(curva=ajuste$y) %>%
ggplot() +
ggtitle('Estimador localmente lineal vs. Nadaraya-Watson') +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(X, Y)) +
geom_line(aes(ajuste$x, curva), color='cadetblue', size=1.1) +
geom_label(aes(x=2, y=80, label='Localmente lineal'), color='cadetblue') +
geom_smooth(function=y ~ x, mapping=aes(X, Y), method='loess', se=FALSE, span=0.25, method.args=list(degree=0), col='darkorange1') +
geom_label(aes(x=2, y=85, label='Nadayara-Watson'), color='darkorange2')+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
library(ggplot2)
library(dplyr)
library(KernSmooth)
# lectura del fichero
df <- read.table("https://matematicas.uam.es/~joser.berrendero/datos/Datos-geyser.txt",
header=FALSE, skip=1, sep=' ', col.names=c(' ', 'D', 'Y', 'X'),
colClasses=c('numeric', 'numeric', 'numeric', 'numeric'))
# guardado en dataframe
df <- df[,c('D', 'Y', 'X')]
# ajuste localmente lineal
ajuste <- with(df, locpoly(X, Y, degree=1, bandwidth=dpill(X, Y), gridsize=107))
ajuste
# plot de ambas
df %>%
mutate(curva=ajuste$y) %>%
ggplot() +
ggtitle('Estimador localmente lineal vs. Nadaraya-Watson') +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(X, Y)) +
geom_line(aes(ajuste$x, curva), color='cadetblue', size=1.1) +
geom_label(aes(x=2, y=80, label='Localmente lineal'), color='cadetblue') +
geom_smooth(mapping=aes(X, Y), method='loess', se=FALSE, span=0.25, method.args=list(degree=0), col='darkorange1') +
geom_label(aes(x=2, y=85, label='Nadayara-Watson'), color='darkorange2')+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
library(ggplot2)
library(dplyr)
library(KernSmooth)
# lectura del fichero
df <- read.table("https://matematicas.uam.es/~joser.berrendero/datos/Datos-geyser.txt",
header=FALSE, skip=1, sep=' ', col.names=c(' ', 'D', 'Y', 'X'),
colClasses=c('numeric', 'numeric', 'numeric', 'numeric'))
# guardado en dataframe
df <- df[,c('D', 'Y', 'X')]
# ajuste localmente lineal
ajuste <- with(df, locpoly(X, Y, degree=1, bandwidth=dpill(X, Y), gridsize=107))
ajuste
# plot de ambas
df %>%
mutate(curva=ajuste$y) %>%
ggplot() +
ggtitle('Estimador localmente lineal vs. Nadaraya-Watson') +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(aes(X, Y)) +
geom_line(aes(ajuste$x, curva), color='cadetblue', size=1.1) +
geom_label(aes(x=2, y=80, label='Localmente lineal'), color='cadetblue') +
geom_smooth(formula = y ~ x, mapping=aes(X, Y), method='loess', se=FALSE, span=0.25, method.args=list(degree=0), col='darkorange1') +
geom_label(aes(x=2, y=85, label='Nadayara-Watson'), color='darkorange2')+
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
scr <- tail(scrs, n=1)
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
# Guardado de los datos
scrs <- c(42644, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
scr <- tail(scrs, n=1)
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
#grafico<- ggplot(data = anova, aes(x=vars, y=scrs, color=scrs)) +
#  geom_boxplot() +
#  theme_bw()
#grafico
# Análisis de la varianza
#anova <- aov (lm(datos$scrs ~ datos$vars))
#summary(anova)
#names(anova)
#fm$residuals
load(url('http://verso.mat.uam.es/~joser.berrendero/datos/combustible.RData'))
head(fuel2001,10)
p_comp <- prcomp(fuel2001[,-c(2)], scale=TRUE)
data <- data.frame(
c1=p_comp$x[ ,1],
c2=p_comp$x[ ,2])
ggplot(data, aes(x=c1, y=c2)) +
geom_point(colour='darkblue') +
ggtitle('Componentes principales') +
xlab('Primera componente') +
ylab('Segunda componente') +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
var_acumulada <- cumsum(p_comp$sdev) / sum(p_comp$sdev)
#sdev <- data.frame(indice = 1:6, var_acumulada)
modelo_completo <- lm(FuelC ~ Drivers + Income + Miles + MPC + Pop + Tax,
data=fuel2001)
summary(modelo_completo)
modelo_reducido <- lm(FuelC ~ Drivers + Miles + Pop,
data=fuel2001)
anova(modelo_reducido)
anova(modelo_reducido, modelo_completo)
datos <- data.frame(y=fuel2001$FuelC,
x1=fuel2001$Drivers,
x2=fuel2001$Income,
x3=fuel2001$Miles,
x4=fuel2001$MPC,
x5=fuel2001$Pop,
x6=fuel2001$Tax)
modelo_forward <- leaps::regsubsets(y ~ ., data=datos, method='forward')
resumen_forward <- summary(modelo_forward)
resumen_forward
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l")
resumen_forward$bic
resumen_forward$which
resumen_forward$cp
resumen_forward$adjr2
resumen_forward$outmat
resumen_forward$rss
resumen_forward$obj
ggplot(aes(resumen_forward$bic))+
geom_line()
ggplot(resumen_forward,aes(resumen_forward$bic))+
geom_line()
ggplot(resumen_forward,aes(y=resumen_forward$bic))+
geom_line()
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l", colours('magenta'))
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l",col='b')
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l",col='blue')
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l",col='blue', title='Modelos con criterio BIC')
which.min(resumen_forward$bic)
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l",col='blue', title='Modelos con criterio BIC')
plot(resumen_forward$bic ,xlab =" Número de variables ",
ylab="BIC",type="l",col='blue', main='Modelos con criterio BIC')
library(glmnet)
install.packages("glmnet")
library(glmnet)
x <- as.matrix(datos[,-1])
y <- datos[,1]
modelo_lasso <- glmnet(x, y, alpha = 1)
lasso_cv <- cv.glmnet (x , y, alpha = 1)
lambda.lasso = lasso_cv$lambda.1se
plot(modelo_lasso, xvar='lambda', label=TRUE)
abline(v = log(lambda.lasso), lty=2, col='blue', lwd=2)
x <- as.matrix(datos[, -1])
y <- datos[, 1]
modelo_lasso <- glmnet(x, y, alpha=1)
lasso <- cv.glmnet (x, y, alpha=1)
lambda.lasso = lasso$lambda.1se
plot(modelo_lasso, xvar='lambda', label=TRUE)
abline(v = log(lambda.lasso), col='magenta', lty=2, lwd=2)
plot(lasso)
i <- which(min(lasso$cvm) == lasso$cvm)
abline(h = lasso$cvm[i] + lasso$cvsd[i], lty=2)
lambda.lasso = lasso$lambda.1se
m_lasso <- glmnet(x, y, alpha=1, lambda=lambda.lasso)
coef(m_lasso)
lambda.lasso = lasso$lambda.1se
final_lasso <- glmnet(x, y, alpha=1, lambda=lambda.lasso)
final_lasso
c <- modelo_lasso$beta[1:6, modelo_lasso$lambda == lambda.lasso]
c[c != 0]
lambda.lasso = lasso$lambda.1se
final_lasso <- glmnet(x, y, alpha=1, lambda=lambda.lasso)
final_lasso
coef(final_lasso)
c <- modelo_lasso$beta[1:6, modelo_lasso$lambda == lambda.lasso]
c[c != 0]
x <- as.matrix(datos[, -1])
y <- datos[, 1]
modelo_ridge <- glmnet(x, y, alpha=0)
ridge <- cv.glmnet (x, y, alpha=0)
lambda.ridge = ridge$lambda.1se
plot(modelo_ridge, xvar='lambda', label=TRUE)
abline(v = log(lambda.ridge), col='green', lty=2, lwd=2)
plot(ridge)
i <- which(min(ridge$cvm) == ridge$cvm)
abline(h = ridge$cvm[i] + lasso$cvsd[i], lty=2)
plot(ridge)
i <- which(min(ridge$cvm) == ridge$cvm)
abline(h = ridge$cvm[i] + ridge$cvsd[i], lty=2)
lambda.ridge = ridge$lambda.1se
final_ridge <- glmnet(x, y, alpha=1, lambda=lambda.ridge)
final_ridge
coef(final_ridge)
c <- modelo_ridge$beta[1:6, modelo_ridge$lambda == lambda.ridge]
c[c != 0]
# Guardado de los datos
scrs <- c(42644.00, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
scr <- tail(scrs, n=1)
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
#grafico<- ggplot(data = anova, aes(x=vars, y=scrs, color=scrs)) +
#  geom_boxplot() +
#  theme_bw()
#grafico
# Análisis de la varianza
#anova <- aov (lm(datos$scrs ~ datos$vars))
#summary(anova)
#names(anova)
#fm$residuals
# Guardado de los datos
scrs <- c(42644.00, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
scr <- tail(scrs, n=1)
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
# Guardado de los datos
scrs <- c(42644.00, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
#scr <- tail(scrs, n=1)
SCR <- srcs[8]
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
#grafico<- ggplot(data = anova, aes(x=vars, y=scrs, color=scrs)) +
#  geom_boxplot() +
#  theme_bw()
#grafico
# Análisis de la varianza
#anova <- aov (lm(datos$scrs ~ datos$vars))
#summary(anova)
#names(anova)
#fm$residuals
# Guardado de los datos
scrs <- c(42644.00, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
#scr <- tail(scrs, n=1)
scr <- scrs[8]
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/n-p-1))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
#grafico<- ggplot(data = anova, aes(x=vars, y=scrs, color=scrs)) +
#  geom_boxplot() +
#  theme_bw()
#grafico
# Análisis de la varianza
#anova <- aov (lm(datos$scrs ~ datos$vars))
#summary(anova)
#names(anova)
#fm$residuals
# Guardado de los datos
scrs <- c(42644.00, 8352.28, 36253.69, 36606.19, 7713.13, 762.55, 32700.17, 761.41)
vars <- c('Indep.', 'x1', 'x2', 'x3', 'x1 y x2', 'x1 y x3', 'x2 y x3', 'x1, x2 y x3')
datos <- data.frame(scrs=scrs, vars=vars)
# Datos completos
n <- 20
p <- 3
scr <- tail(scrs, n=1)
sce <- scrs[1]-scr
df <- c(p, n-p-1)
sum_sq <- c(sce, scr)
mean_sq <- sum_sq/df
f_value <- c(mean_sq[1]/mean_sq[2], NA)
pr <- c(pf(f_value[1], df1=p, df2=n-p-1, lower.tail=FALSE), NA)
anova <- data.frame("anova data"=c('scrs', 'Residuals'), 'Df'=df, 'Sum Sq'=sum_sq, 'Mean Sq'=mean_sq, 'F value'=f_value, 'Pr(>F)'=pr)
anova
k <- 1
f_value <- ((scrs[6]-scr)/k / (scr/(n-p-1)))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
k <- 2
f_value <- ((scrs[3]-scr)/k / (scr/(n-p-1)))
pr <- pf(f_value, df1=k, df2=n-p-1, lower.tail=FALSE)
pr
#grafico<- ggplot(data = anova, aes(x=vars, y=scrs, color=scrs)) +
#  geom_boxplot() +
#  theme_bw()
#grafico
# Análisis de la varianza
#anova <- aov (lm(datos$scrs ~ datos$vars))
#summary(anova)
#names(anova)
#fm$residuals
load(url('http://verso.mat.uam.es/~joser.berrendero/datos/combustible.RData'))
head(fuel2001,10)
p_comp <- prcomp(fuel2001[,-c(2)], scale=TRUE)
data <- data.frame(
c1=p_comp$x[ ,1],
c2=p_comp$x[ ,2])
ggplot(data, aes(x=c1, y=c2)) +
geom_point(colour='darkblue') +
ggtitle('Componentes principales') +
xlab('Primera componente') +
ylab('Segunda componente') +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
# Excluimos la variable a predecir y creamos un df con las dos componentes
p_comp <- prcomp(fuel2001[,-c(2)], scale=TRUE)
data <- data.frame(
c1=p_comp$x[ ,1],
c2=p_comp$x[ ,2])
# Plot de las componentes principales
ggplot(data, aes(x=c1, y=c2)) +
geom_point(colour='darkblue') +
ggtitle('Componentes principales') +
xlab('Primera componente') +
ylab('Segunda componente') +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
# Cálculo de la varianza acumulada
var_acumulada <- cumsum(p_comp$sdev^2)/sum(p_comp$sdev^2)
var_acumulada
load(url('http://verso.mat.uam.es/~joser.berrendero/datos/combustible.RData'))
head(fuel2001,10)
p_comp <- prcomp(fuel2001[,-c(2)], scale=TRUE)
data <- data.frame(
c1=p_comp$x[ ,1],
c2=p_comp$x[ ,2])
ggplot(data, aes(x=c1, y=c2)) +
geom_point(colour='darkblue') +
ggtitle('Componentes principales') +
xlab('Primera componente') +
ylab('Segunda componente') +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
# Excluimos la variable a predecir y creamos un df con las dos componentes
p_comp <- prcomp(fuel2001[,-c(2)], scale=TRUE)
data <- data.frame(
c1=p_comp$x[ ,1],
c2=p_comp$x[ ,2])
# Plot de las componentes principales
ggplot(data, aes(x=c1, y=c2)) +
geom_point(colour='darkblue') +
ggtitle('Componentes principales') +
xlab('Primera componente') +
ylab('Segunda componente') +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line = element_line(colour = "black"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
panel.background = element_blank())
# Cálculo de la varianza acumulada
var_acumulada <- cumsum(p_comp$sdev^2)/sum(p_comp$sdev^2)
#sdev <- data.frame(indice = 1:6, var_acumulada)
modelo_completo <- lm(FuelC ~ Drivers + Income + Miles + MPC + Pop + Tax,
data=fuel2001)
summary(modelo_completo)
modelo_reducido <- lm(FuelC ~ Drivers + Miles + Pop,
data=fuel2001)
anova(modelo_reducido)
anova(modelo_reducido, modelo_completo)
data <- data.frame(y=fuel2001$FuelC,
x1=fuel2001$Drivers,
x2=fuel2001$Income,
x3=fuel2001$Miles,
x4=fuel2001$MPC,
x5=fuel2001$Pop,
x6=fuel2001$Tax)
modelo_forward <- leaps::regsubsets(y ~ ., data=data, method='forward')
s_forward <- summary(modelo_forward)
s_forward
plot(s_forward$bic ,xlab ='Número de variables',
ylab="BIC", type="l", col='blue', main='Modelos con criterio BIC')
which.min(s_forward$bic)
s_forward$outmat[which.min(s_forward$bic), ]
library(glmnet)
x <- as.matrix(datos[, -1])
y <- datos[, 1]
modelo_lasso <- glmnet(x, y, alpha=1)
lasso <- cv.glmnet (x, y, alpha=1)
lambda.lasso = lasso$lambda.1se
plot(modelo_lasso, xvar='lambda', label=TRUE)
abline(v = log(lambda.lasso), col='magenta', lty=2, lwd=2)
plot(lasso)
i <- which(min(lasso$cvm) == lasso$cvm)
abline(h = lasso$cvm[i] + lasso$cvsd[i], lty=2)
plot(lasso)
i <- which(min(lasso$cvm) == lasso$cvm)
abline(h = lasso$cvm[i] + lasso$cvsd[i], lty=2)

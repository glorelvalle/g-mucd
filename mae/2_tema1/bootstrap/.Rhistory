ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método percentil)')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 2
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rexp(n, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original + qnorm(alfa/2, 0, 1)*sd(gamma_bootstrap)
ic_max  <- gamma_original + qnorm(1-alfa/2, 0, 1)*sd(gamma_bootstrap)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método normal)')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original + qnorm(alfa/2, 0, 1)*sd(gamma_bootstrap)
ic_max  <- gamma_original + qnorm(1-alfa/2, 0, 1)*sd(gamma_bootstrap)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método normal)')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original + qnorm(alfa/2, 0, 1)*sd(gamma_bootstrap)
ic_max  <- gamma_original + qnorm(1-alfa/2, 0, 1)*sd(gamma_bootstrap)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método normal)')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original + qnorm(alfa/2, 0, 1)*sd(gamma_bootstrap)
ic_max  <- gamma_original + qnorm(1-alfa/2, 0, 1)*sd(gamma_bootstrap)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método normal) con distribución normal')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 2
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rexp(n, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original + qnorm(alfa/2, 0, 1)*sd(gamma_bootstrap)
ic_max  <- gamma_original + qnorm(1-alfa/2, 0, 1)*sd(gamma_bootstrap)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método normal) con distribución exponencial')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1)
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
ic_min <- quantile(gamma_bootstrap, alfa/2)
ic_max  <- quantile(gamma_bootstrap, 1-alfa/2)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d" , a)
sprintf("Errores: %d" , e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método percentil) con distribución normal')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rexp(n, 1)
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
ic_min <- quantile(gamma_bootstrap, alfa/2)
ic_max  <- quantile(gamma_bootstrap, 1-alfa/2)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método percentil) con distribución exponencial')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 2
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rexp(n, 1)
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
ic_min <- quantile(gamma_bootstrap, alfa/2)
ic_max  <- quantile(gamma_bootstrap, 1-alfa/2)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <- length(acierto[acierto== TRUE])
e <- length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d", a)
sprintf("Errores: %d", e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método percentil) con distribución exponencial')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original -  quantile(T_bootstrap, 1-alfa/2)/sqrt(n)
ic_max  <- gamma_original -  quantile(T_bootstrap, alfa/2)/sqrt(n)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <-length(acierto[acierto== TRUE])
e <-length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d" , a)
sprintf("Errores: %d" , e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método bootstrap híbrido) con distribución normal')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 0
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rnorm(n, 0, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original -  quantile(T_bootstrap, 1-alfa/2)/sqrt(n)
ic_max  <- gamma_original -  quantile(T_bootstrap, alfa/2)/sqrt(n)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <-length(acierto[acierto== TRUE])
e <-length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d" , a)
sprintf("Errores: %d" , e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método bootstrap híbrido) con distribución normal')
set.seed(100)
# Parámetros
R <- 1000
n <- 100
theta <- 2
m <- 100
alfa <- 0.05
coef_asimetria <- function(muestra)
{
media <- mean(muestra)
dt <- sd(muestra)
mean((muestra - media)^3)/dt^3
}
# Cálculo de los intervalos
acierto <- NULL
intervalo <- NULL
for (i in 1:m){
muestra_original <- rexp(n, 1) + theta
gamma_original <- coef_asimetria(muestra_original)
muestras_bootstrap <- sample(muestra_original, n*R, rep = TRUE)
muestras_bootstrap <- matrix(muestras_bootstrap, nrow = n)
gamma_bootstrap <- apply(muestras_bootstrap, 2, coef_asimetria)
T_bootstrap <- sqrt(n) * (gamma_bootstrap - gamma_original)
ic_min <- gamma_original -  quantile(T_bootstrap, 1-alfa/2)/sqrt(n)
ic_max  <- gamma_original -  quantile(T_bootstrap, alfa/2)/sqrt(n)
intervalo <- rbind(intervalo, c(ic_min, ic_max))
acierto <- c(acierto, ic_min < theta & ic_max > theta)
}
a <-length(acierto[acierto== TRUE])
e <-length(acierto[acierto== FALSE])
pa <- a/(a+e)
sprintf("Aciertos: %d" , a)
sprintf("Errores: %d" , e)
sprintf("%f acierto", pa)
# Gráfico
df <- data.frame(ic_min <- intervalo[,1],
ic_max <- intervalo[,2],
ind = 1:m,
acierto = acierto)
ggplot(df) +
geom_linerange(aes(xmin = ic_min, xmax = ic_max, y = ind, col = acierto)) +
scale_color_hue(labels = c("NO", "SÍ")) +
geom_vline(aes(xintercept = theta), linetype = 2) +
theme_bw() +
labs(y = 'Muestras', x = 'Intervalos (nivel 0.95)',
title = 'IC (método bootstrap híbrido) con distribución exponencial')
